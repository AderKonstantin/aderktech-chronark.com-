services:
  redis:
    image: redis:alpine
    container_name: main-aderk-redis
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    networks:
      - backend

    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3
  next:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: main-aderk-next
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.next.rule=Host(`aderk.tech`)"
      - "traefik.http.routers.next.entrypoints=https"
      - "traefik.http.routers.next.tls=true"
      - "traefik.http.services.next.loadbalancer.server.port=3000"
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    networks:
      - proxy
      - backend

volumes:
  redis_data:


networks:
  proxy:
    external: true
  backend:
    internal: true
